metadata:
  name: cpp-facebookresearch-sam-vit-h
  namespace: cvat
  annotations:
    name: Segment Anything C++
    version: 2
    type: interactor
    spec:
    max_pos_points: 1
    max_neg_points: 0
    animated_gif: https://raw.githubusercontent.com/cvat-ai/cvat/develop/site/content/en/images/hrnet_example.gif
    help_message: The interactor allows to get a mask of an object using at least one positive, and any negative points inside it

spec:
  description: Interactive object segmentation with Segment-Anything (C++ version)
  runtime: "python:3.8"
  handler: main:handler
  eventTimeout: 30s
  env:
    - name: PYTHONPATH
      value: /opt/nuclio/sam

  build:
    image: cvat.cpp.facebookresearch.sam.vit_h
    baseImage: sam-cpp:base
    # baseImage: python:3.11.0-slim-bullseye
    # noCache: true

    # directives:
    #   preCopy:
    #   - kind: ENV
    #     value: DEBIAN_FRONTEND=noninteractive
    #   - kind: RUN
    #     value: |
    #       apt-get update && apt-get -y install \
    #         curl git cmake libsdl2-dev wget python3-pip libc6 && \
    #       ln -s /usr/bin/python3 /usr/bin/python
    #   - kind: WORKDIR
    #     value: /opt/nuclio/sam
    #   - kind: RUN
    #     value: git clone --recursive https://github.com/vivasvan-patel-ev/sam.cpp.git
    #   - kind: WORKDIR
    #     value: /opt/nuclio/sam/sam.cpp
    #   - kind: RUN
    #     value: |
    #       pip install --upgrade pip setuptools wheel opencv-python-headless requests opencv-contrib-python imutils && \
    #       pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
    #   - kind: RUN
    #     value: |
    #       mkdir checkpoints && \
    #       wget -O checkpoints/sam_vit_b_01ec64.pth https://dl.fbaipublicfiles.com/segment_anything/sam_vit_b_01ec64.pth
    #   - kind: RUN
    #     value: |
    #       python convert-pth-to-ggml.py checkpoints/sam_vit_b_01ec64.pth ./checkpoints 1 && \
    #       mkdir build && cd build && cmake .. && make -j4
    #   - kind: RUN
    #     value: g++ -shared -o ./release/x64/libmask.so ./examples/lib.cpp -fPIC -std=c++11 -lstdc++ -lpthread -I. -Icpp-httplib -Lbuild/bin -lsam.cpp -lggml -Wl,-rpath,build/bin

  triggers:
    myHttpTrigger:
      maxWorkers: 2
      kind: "http"
      workerAvailabilityTimeoutMilliseconds: 10000
      attributes:
        maxRequestBodySize: 33554432 # 32MB

  platform:
    attributes:
      restartPolicy:
        name: always
        maximumRetryCount: 3
      mountMode: volume
